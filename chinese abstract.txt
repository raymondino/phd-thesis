流推理(Stream Reasoning)是一个崭新的研究领域，旨在将推理融合进流数据处理当中，从而能够从数据流中不仅提取浅显的信息，更能够得到深层次的隐藏信息。本博士论文的研究问题主要围绕对数据流的重要性建模。一般来讲，窗口是处理流数据的一个广泛应用的方法。一个窗口只能够观察有限多个数据，而这些数据所能够提供的信息往往很有限，这就导致查询的结果不一定精确。比如，如果两个数据之间的距离大于窗口的长度，而这两个数据又是回答一个查询所必须的，那么显然这个查询会得到一个假阴性的结果，即：本来应该有一个查询答案，可是查询返回的却是没有答案。这个问题可以通过增大窗口的长度来解决：只要这个窗口足够长，就可以保证这两个必要的数据在窗口中，从而达到返回正确答案的目的。然而，这种方法实际上并不可行。因为一般来讲，不可能预知两个数据之间的距离来提前设置窗口大小，甚至不一定知道当前窗口中有多少必要的数据。一味地增大窗口长度只会增加窗口中的数据量，从而加大系统响应的压力。

实际上，绝大多数流处理系统的窗口管理数据的策略基本上是先进先出(FIFO)，即：最先进入窗口的数据要最先离开来吸收最新的数据。FIFO策略仅仅根据数据的时间戳来判断何时移除或吸收数据，且基于一个“默认的世俗假设”：越老的数据越不重要。针对这个假设，本论文首先提出FIFO策略在一些情况下管理数据会造成“提早删除(early eviction)”或“提早过期(early expiration)”两个问题，并且指出仅仅基于时间戳的管理策略不能够有效地提高流推理系统的性能。其次，本论文提出了一个创新的概念——“语义重要性(semantic importance)”，用来对流数据的重要性进行建模。其目的就是基于流数据的重要性排序来进行数据管理，从而加快流推理系统的响应时间，降低内存消耗，增加吞吐量，和提高正确率。再次，为了验证语义重要性，并且提供一个部署语义重要性的系统范例，本论文提出了序列式流推理系统构架(sequential stream reasoning architecture)，并且实现了两个实际案例。得到的结果表明语义重要性能够对流推理系统有比较好的增强效果。最后，本论文提出了语义重要性的一般化和基准测试工具(SIGenBench)，旨在进一步一般化这个概念，并且量化其对于流推理系统四个性能指标（正确率，内存消耗，响应时间，吞吐量）的收益。

总的来说，本论文提出了一个新颖的概念——语义重要性，并且提供了一套基础设施和两个实现案例来表明对流数据重要性的建模能够增强流推理系统。